name: Run unittests, build Docker image and deploy it to staging cluster
on:
  push:
    branches:
      - "*"
    tags-ignore:
      - "**"

env:
  DOCKER_REGISTRY_REPOSITORY: invoicereader.azurecr.io
  DOCKER_IMAGE_NAME: ds-invoicereader-finalization

jobs:
  unittests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9" # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified
      - name: Install the dependencies
        env:
          PYTHON_PACKAGES_PAT: ${{ secrets.INVOICEREADER_PYTHON_PACKAGES_PAT }}
        run: |
          pip install -r requirements.dev.txt  --extra-index-url=https://blank:${PYTHON_PACKAGES_PAT}@pkgs.dev.azure.com/DatasenticsCommon/_packaging/DatasenticsCommon/pypi/simple/
      - name: Check all source codes are formated by Black to PEP8
        run: black --check --diff .
      - name: Download GT data
        run: python ./tools/get-metrics-data.py
      - name: Run tests
        run: |
          pytest --cov

  build:
    runs-on: ubuntu-latest
    needs: unittests
    steps:
      - uses: actions/checkout@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY_REPOSITORY }}
          username: ${{ secrets.INVOICEREADER_DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.INVOICEREADER_DOCKER_REGISTRY_PASSWORD }}
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
          images: |
            ${{ env.DOCKER_REGISTRY_REPOSITORY }}/${{ env.DOCKER_IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          pull: true
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          secrets: |
            "python_packages_pat=${{ secrets.INVOICEREADER_PYTHON_PACKAGES_PAT }}"


  deploy_staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@master
      # prepare tools
      - uses: azure/setup-helm@v1
      - uses: mdgreenwald/mozilla-sops-action@v1
      - run: helm plugin install https://github.com/jkroepke/helm-secrets --version v3.6.0
      - uses: azure/setup-kubectl@v1

      # loging to azure and to kubernetes
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.INVOICEREADER_AZURE_CREDENTIALS }}
      - name: preparelogin
        env:
          KUBESECRET: ${{ secrets.INVOICEREADER_KUBE_CONFIG_STAGING }}
        run: |
          mkdir -p ~/.kube
          echo "${KUBESECRET// /}" | base64 --decode > ~/.kube/config

      # Deploy to staging
      - name: Set SHA env
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV
      - run: |
          HELM_SERVICE_NAME=ds-invoicereader-finalization\
            HELM_KUBE_CTX=digitoo \
            HELM_NAMESPACE=datasentics-invoicereader-stage \
            HELM_IMAGE_TAG=sha-${{ env.GITHUB_SHA_SHORT }} \
            make k8s-digitoo-dry
      - run: |
          HELM_SERVICE_NAME=ds-invoicereader-finalization\
            HELM_KUBE_CTX=digitoo \
            HELM_NAMESPACE=datasentics-invoicereader-stage \
            HELM_IMAGE_TAG=sha-${{ env.GITHUB_SHA_SHORT }} \
            make k8s-digitoo-deploy